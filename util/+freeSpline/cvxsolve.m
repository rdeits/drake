% Produced by CVXGEN, 2015-03-24 13:12:44 -0400.
% CVXGEN is Copyright (C) 2006-2012 Jacob Mattingley, jem@cvxgen.com.
% The code in this file is Copyright (C) 2006-2012 Jacob Mattingley.
% CVXGEN, or solvers produced by CVXGEN, cannot be used for commercial
% applications without prior written permission from Jacob Mattingley.

% Filename: cvxsolve.m.
% Description: Solution file, via cvx, for use with sample.m.
function [vars, status] = cvxsolve(params, settings)
r0 = params.r0;
r_switch = params.r_switch;
r_switch_slack = params.r_switch_slack;
rd0 = params.rd0;
rd_switch = params.rd_switch;
rd_switch_slack = params.rd_switch_slack;
rdf = params.rdf;
rf = params.rf;
t_f = params.t_f;
t_switch = params.t_switch;
cvx_begin
  % Caution: automatically generated by cvxgen. May be incorrect.
  variable max_accel;
  variable C1_2(6, 1);
  variable C1_3(6, 1);
  variable C2_2(6, 1);
  variable C2_3(6, 1);
  variable C1_0(6, 1);
  variable C1_1(6, 1);
  variable C2_0(6, 1);
  variable C2_1(6, 1);

  minimize(max_accel);
  subject to
    max_accel >= abs(2*C1_2);
    max_accel >= abs(2*C1_2 + 6*t_switch*C1_3);
    max_accel >= abs(2*C2_2);
    max_accel >= abs(2*C2_2 + 6*(t_f - t_switch)*C2_3);
    C1_0 + t_switch*C1_1 + t_switch*t_switch*C1_2 + t_switch*t_switch*t_switch*C1_3 == C2_0;
    C1_1 + 2*t_switch*C1_2 + 3*t_switch*t_switch*C1_3 == C2_1;
    C1_0 == r0;
    C1_1 == rd0;
    C2_0 + (t_f - t_switch)*C2_1 + (t_f - t_switch)*(t_f - t_switch)*C2_2 + (t_f - t_switch)*(t_f - t_switch)*(t_f - t_switch)*C2_3 == rf;
    C2_1 + 2*(t_f - t_switch)*C2_2 + 3*(t_f - t_switch)*(t_f - t_switch)*C2_3 == rdf;
    abs(C2_0 - r_switch) <= r_switch_slack;
    abs(C2_1 - rd_switch) <= rd_switch_slack;
cvx_end
vars.C1_0 = C1_0;
vars.C1_1 = C1_1;
vars.C1{1} = C1_1;
vars.C1_2 = C1_2;
vars.C1{2} = C1_2;
vars.C1_3 = C1_3;
vars.C1{3} = C1_3;
vars.C2_0 = C2_0;
vars.C2_1 = C2_1;
vars.C2{1} = C2_1;
vars.C2_2 = C2_2;
vars.C2{2} = C2_2;
vars.C2_3 = C2_3;
vars.C2{3} = C2_3;
vars.max_accel = max_accel;
status.cvx_status = cvx_status;
% Provide a drop-in replacement for csolve.
status.optval = cvx_optval;
status.converged = strcmp(cvx_status, 'Solved');
